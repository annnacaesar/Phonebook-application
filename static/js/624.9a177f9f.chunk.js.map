{"version":3,"file":"static/js/624.9a177f9f.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.jsx","components/ContactForm/ContactForm.styled.jsx","helpers/validation-yup.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n// import img from '../../images/brando-makes-branding-PjhOkwN0ruY-unsplash.jpg';\nimport img from '../../images/book.jpg';\n// import img from '../../images/mediamodifier-OhVnADTC7rY-unsplash.jpg';\n// import img from '../../images/rhema-kallianpur-2W3bDp7K1oQ-unsplash.jpg';\n\n// export const AppContainer = styled.div`\n// \tbox-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.25);\n// \tdisplay: flex;\n// \tmin-height: 100vh;\n\n// \tjustify-content: center;\n// \tfont-size: 40px;\n// \tcolor: var(--color);\n// `;\nexport const ContainerStyled = styled.div`\n\t/*  */\n\t\n\twidth: 100%;\n\theight:90vh;\n\tdisplay: flex;\n\tjustify-content: center;\n\tbackground-image: url(${img});\n\tbackground-repeat: no-repeat;\n\tbackground-size: 100%;\n`;\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\t/* padding: 15px; */\n\twidth: 440px;\n\t/* box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.25); */\n\t/* background-color: var(--background-color); */\n\t&:not(:last-child) {\n\t\tmargin-right: 5px;\n\t}\n`;\n\nexport const TitleMain = styled.h1`\n\ttext-align: center;\n\tfont-size: 72px;\n`;\n\nexport const NoContact = styled.div`\n\ttext-align: center;\n\tfont-size: 28px;\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormStyled = styled(Form)`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nexport const InputContainer = styled.div`\n\twidth: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\tmargin: 10px 0 10px 0;\n\tdisplay: flex;\n\tjustify-content: center;\n\n\t& label {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tfont-size: 22px;\n\t\tcolor: var(--color-label);\n\t\tmargin-bottom: 15px;\n\n\t\t&:not(:last-child) {\n\t\t\tmargin-right: 10px;\n\t\t}\n\t}\n`;\n\nexport const Error = styled(ErrorMessage)`\n\tfont-size: 14px;\n\tcolor: var(--color-warning);\n`;\n\nexport const Input = styled(Field)`\n\tbackground-color: var(--color-input);\n\twidth: 200px;\n\theight: 40px;\n\tmargin: 0;\n\tpadding: 0 15px 0 15px;\n\tborder-radius: 5px;\n`;\n\nexport const ButtonSubmit = styled.button`\n\twidth: 200px;\n\theight: 40px;\n\tborder-radius: 5px;\n\tcolor: var(--color-button);\n\tbackground-color: inherit;\n\tborder: 1px solid var(--color-button);\n`;\n","import * as yup from 'yup';\nconst phoneRegExp =\n\t/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nexport const schema = () =>\n\tyup.object().shape({\n\t\tname: yup\n\t\t\t.string()\n\t\t\t.matches(\n\t\t\t\tnameRegExp,\n\t\t\t\t\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t)\n\t\t\t.required(),\n\t\tnumber: yup\n\t\t\t.string()\n\t\t\t.matches(\n\t\t\t\tphoneRegExp,\n\t\t\t\t'Phone number must be digits and can contain spaces, dashes, parentheses and can start without +'\n\t\t\t)\n\t\t\t.required(),\n\t});\n","import { Formik } from 'formik';\nimport { toast } from 'react-toastify';\nimport {\n\tInput,\n\tInputContainer,\n\tButtonSubmit,\n\tFormStyled,\n\tError,\n} from './ContactForm.styled';\nimport { schema } from 'helpers/validation-yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport { contactsSelectors } from 'redux/contacts';\n\nconst initialValues = {\n\tname: '',\n\tnumber: '',\n};\n\nconst ContactForm = () => {\n\tconst dispatch = useDispatch();\n\tconst contacts = useSelector(contactsSelectors.getAllContacts);\n\n\tconst handleSubmit = (values, { resetForm }) => {\n\t\tconsole.log(values);\n\t\tconst findContact = contacts.find(contact =>\n\t\t\tcontact.name.toLowerCase().includes(values.name.toLowerCase())\n\t\t);\n\t\tfindContact\n\t\t\t? toast.info(`${values.name} is already in contact`)\n\t\t\t: dispatch(contactsOperations.addContact(values));\n\t\tresetForm();\n\t};\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={initialValues}\n\t\t\tonSubmit={handleSubmit}\n\t\t\tvalidationSchema={schema}\n\t\t>\n\t\t\t{({ errors, touched, isValidating }) => (\n\t\t\t\t<FormStyled>\n\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<Input type=\"text\" name=\"name\" />\n\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t<Error component=\"div\" name=\"name\" />\n\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<Input type=\"tel\" name=\"number\" />\n\t\t\t\t\t\t\tNumber phone\n\t\t\t\t\t\t\t<Error component=\"div\" name=\"number\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</InputContainer>\n\n\t\t\t\t\t<ButtonSubmit type=\"submit\">ADD CONTACT</ButtonSubmit>\n\t\t\t\t</FormStyled>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nexport const InputFilter = styled.input`\nbackground-color: var(--color-input);\nheight: 40px;\nmargin: 0;\npadding: 0 15px 0 15px;\nborder-radius: 5px;\n\n&:not(:last-child){\n\tmargin-right: 10px;\n}\n`\n\nexport const LabelFilter = styled.label`\nmargin: 10px 0 10px 0;\ndisplay: flex;\nflex-direction: column;\nfont-size: 22px;\ncolor: var(--color-label);\n`","import { InputFilter, LabelFilter } from './Filter.styled';\nimport { PropTypes } from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter, contactsSelectors } from 'redux/contacts';\n\nconst Filter = () => {\n\tconst dispatch = useDispatch();\n\tconst value = useSelector(contactsSelectors.getfilter);\n\n\tconst handleChangeFilter = e => {\n\t\tconsole.log(e.target.value);\n\t\tdispatch(changeFilter(e.target.value));\n\t};\n\treturn (\n\t\t<LabelFilter>\n\t\t\t<InputFilter\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChangeFilter}\n\t\t\t/>\n\t\t\tFind contact by name\n\t\t</LabelFilter>\n\t);\n};\n\nFilter.propTypes = {\n\tfilter: PropTypes.string,\n\tonChange: PropTypes.func,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n\t&:not(:last-child) {\n\t\tmargin-bottom: 10px;\n\t}\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tfont-size: 24px;\n`;\n\nexport const Contact = styled.p`\n\tmargin-right: 10px;\n\tfont-size: 20px;\n`;\n\nexport const ButtonClose = styled.button`\n\tpadding: 0 5px 5px 5px;\n\tfont-size: 30px;\n\twidth: 40px;\n\tbackground-color: inherit;\n\tborder: 1px solid var(--color-button);\n\tborder-radius: 5px;\n\tcolor: var(--color-button);\n`;\n","import { Item, ButtonClose, Contact } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ContactList = () => {\n\tconst dispatch = useDispatch();\n\tconst contacts = useSelector(contactsSelectors.getVisibleContacts);\n\n\tconst onDeleteContact = id =>\n\t\tdispatch(contactsOperations.deleteContact(id));\n\n\treturn (\n\t\t<ul>\n\t\t\t<TransitionGroup className=\"todo-list\">\n\t\t\t\t{contacts &&\n\t\t\t\t\tcontacts.map(({ id, name, number }) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CSSTransition\n\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\ttimeout={500}\n\t\t\t\t\t\t\t\tclassNames=\"item\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Item key={id}>\n\t\t\t\t\t\t\t\t\t<Contact>\n\t\t\t\t\t\t\t\t\t\t{name}: {number}\n\t\t\t\t\t\t\t\t\t</Contact>\n\t\t\t\t\t\t\t\t\t<ButtonClose\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => onDeleteContact(id)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tx\n\t\t\t\t\t\t\t\t\t</ButtonClose>\n\t\t\t\t\t\t\t\t</Item>\n\t\t\t\t\t\t\t</CSSTransition>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</TransitionGroup>\n\t\t</ul>\n\t);\n};\n\nexport default ContactList;\n","import { Container, ContainerStyled } from './Contacts.styled';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport ContactForm from 'components/ContactForm';\nimport { useEffect } from 'react';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport { getIsLoggedIn } from 'redux/auth/authSelectors';\n\nconst Contacts = () => {\n\tconst dispatch = useDispatch();\n\tconst isLogIn = useSelector(getIsLoggedIn);\n\tconst isLoadingContacts = useSelector(contactsSelectors.getLoading);\n\n\tuseEffect(() => {\n\t\tif (isLogIn) dispatch(contactsOperations.fetchContacts());\n\t}, [dispatch, isLogIn]);\n\n\treturn (\n\t\t<ContainerStyled>\n\t\t\t<Container>\n\t\t\t\t<ContactForm />\n\t\t\t</Container>\n\t\t\t<Container>\n\t\t\t\t{isLoadingContacts && (\n\t\t\t\t\t<InfinitySpin width=\"100\" color=\"#132b13\" />\n\t\t\t\t)}\n\t\t\t\t<Filter />\n\t\t\t\t<ContactList />\n\t\t\t\t{/* <NoContact>Ви ще не додали жодного контакту😬</NoContact> */}\n\t\t\t</Container>\n\t\t</ContainerStyled>\n\t);\n};\nexport default Contacts;\n"],"names":["ContainerStyled","styled","img","Container","FormStyled","Form","InputContainer","Error","ErrorMessage","Input","Field","ButtonSubmit","phoneRegExp","nameRegExp","schema","yup","shape","name","matches","required","number","initialValues","dispatch","useDispatch","contacts","useSelector","contactsSelectors","onSubmit","values","resetForm","console","log","find","contact","toLowerCase","includes","toast","contactsOperations","validationSchema","errors","touched","isValidating","type","component","InputFilter","LabelFilter","value","onChange","e","target","changeFilter","Item","Contact","ButtonClose","TransitionGroup","className","map","id","CSSTransition","timeout","classNames","onClick","onDeleteContact","isLogIn","getIsLoggedIn","isLoadingContacts","useEffect","width","color"],"sourceRoot":""}